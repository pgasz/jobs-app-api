{"version":3,"sources":["axios.js","context/actions.js","context/reducer.js","context/appContext.js","components/FormRow.js","assets/logo.svg","pages/Register.js","assets/main.svg","pages/Home.js","components/Navbar.js","components/JobColumns.js","components/Jobs.js","pages/Dashboard.js","pages/Edit.js","assets/not-found.svg","pages/Error.js","pages/PrivateRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","interceptors","request","use","req","localStorage","getItem","token","JSON","parse","headers","authorization","SET_LOADING","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","SET_USER","FETCH_JOBS_SUCCESS","FETCH_JOBS_ERROR","LOGOUT_USER","CREATE_JOB_SUCCESS","CREATE_JOB_ERROR","DELETE_JOB_ERROR","FETCH_SINGLE_JOB_SUCCESS","FETCH_SINGLE_JOB_ERROR","EDIT_JOB_SUCCESS","EDIT_JOB_ERROR","reducer","state","action","type","isLoading","showAlert","editComplete","user","payload","jobs","isEditing","editItem","singleJobError","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","setLoading","register","userInput","a","post","data","name","setItem","stringify","login","logout","removeItem","fetchJobs","get","createJob","job","deleteJob","jobId","delete","fetchSingleJob","editJob","patch","useEffect","newUser","Provider","value","useGlobalContext","useContext","FormRow","handleChange","horizontal","placeholder","className","htmlFor","onChange","Wrapper","styled","section","Register","useState","email","password","isMember","values","setValues","e","target","to","onSubmit","preventDefault","src","logo","alt","disabled","onClick","div","Home","main","nav","Navbar","showLogout","setShowLogout","JobColumns","EmptyContainer","Container","StatusContainer","span","props","status","Jobs","length","map","item","id","_id","company","position","createdAt","date","moment","format","charAt","toLowerCase","Dashboard","ErrorContainer","Update","useParams","error","img","PrivateRoute","rest","render","App","path","exact","Edit","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7b1afa9.chunk.js","sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3005'; // watch out for the port\n\naxios.interceptors.request.use(function (req) {\n    const user = localStorage.getItem('user');\n\n    if (user) {\n        const { token } = JSON.parse(localStorage.getItem('user'));\n        req.headers.authorization = `Bearer ${token}`;\n        return req;\n    }\n    return req;\n});\n","export const SET_LOADING = 'SET_LOADING'\n\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR'\n\nexport const SET_USER = 'SET_USER'\nexport const FETCH_JOBS_SUCCESS = 'FETCH_JOBS_SUCCESS'\nexport const FETCH_JOBS_ERROR = 'FETCH_JOBS_ERROR'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const CREATE_JOB_SUCCESS = 'CREATE_JOB_SUCCESS'\nexport const CREATE_JOB_ERROR = 'CREATE_JOB_ERROR'\nexport const DELETE_JOB_ERROR = 'DELETE_JOB_ERROR'\nexport const FETCH_SINGLE_JOB_SUCCESS = 'FETCH_SINGLE_JOB_SUCCESS'\nexport const FETCH_SINGLE_JOB_ERROR = 'FETCH_SINGLE_JOB_ERROR'\n\nexport const EDIT_JOB_SUCCESS = 'EDIT_JOB_SUCCESS'\nexport const EDIT_JOB_ERROR = 'EDIT_JOB_ERROR'\n","import {\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  SET_USER,\n  FETCH_JOBS_SUCCESS,\n  FETCH_JOBS_ERROR,\n  LOGOUT_USER,\n  SET_LOADING,\n  CREATE_JOB_SUCCESS,\n  CREATE_JOB_ERROR,\n  DELETE_JOB_ERROR,\n  FETCH_SINGLE_JOB_SUCCESS,\n  FETCH_SINGLE_JOB_ERROR,\n  EDIT_JOB_ERROR,\n  EDIT_JOB_SUCCESS,\n} from './actions'\n\nconst reducer = (state, action) => {\n  if (action.type === SET_LOADING) {\n    return { ...state, isLoading: true, showAlert: false, editComplete: false }\n  }\n\n  if (action.type === REGISTER_USER_SUCCESS) {\n    return {\n      ...state,\n      isLoading: false,\n      user: action.payload,\n    }\n  }\n  if (action.type === REGISTER_USER_ERROR) {\n    return {\n      ...state,\n      isLoading: false,\n      user: null,\n      showAlert: true,\n    }\n  }\n\n  if (action.type === SET_USER) {\n    return { ...state, user: action.payload }\n  }\n  if (action.type === LOGOUT_USER) {\n    return {\n      ...state,\n      user: null,\n      showAlert: false,\n      jobs: [],\n      isEditing: false,\n      editItem: null,\n    }\n  }\n\n  if (action.type === FETCH_JOBS_SUCCESS) {\n    return {\n      ...state,\n      isLoading: false,\n      editItem: null,\n      singleJobError: false,\n      editComplete: false,\n      jobs: action.payload,\n    }\n  }\n  if (action.type === FETCH_JOBS_ERROR) {\n    return { ...state, isLoading: false }\n  }\n  if (action.type === CREATE_JOB_SUCCESS) {\n    return {\n      ...state,\n      isLoading: false,\n      jobs: [...state.jobs, action.payload],\n    }\n  }\n  if (action.type === CREATE_JOB_ERROR) {\n    return {\n      ...state,\n      isLoading: false,\n      showAlert: true,\n    }\n  }\n\n  if (action.type === DELETE_JOB_ERROR) {\n    return {\n      ...state,\n      isLoading: false,\n      showAlert: true,\n    }\n  }\n\n  if (action.type === FETCH_SINGLE_JOB_SUCCESS) {\n    return { ...state, isLoading: false, editItem: action.payload }\n  }\n  if (action.type === FETCH_SINGLE_JOB_ERROR) {\n    return { ...state, isLoading: false, editItem: '', singleJobError: true }\n  }\n\n  if (action.type === EDIT_JOB_SUCCESS) {\n    return {\n      ...state,\n      isLoading: false,\n      editComplete: true,\n      editItem: action.payload,\n    }\n  }\n  if (action.type === EDIT_JOB_ERROR) {\n    return {\n      ...state,\n      isLoading: false,\n      editComplete: true,\n      showAlert: true,\n    }\n  }\n  throw new Error(`no such action : ${action}`)\n}\n\nexport default reducer\n","import axios from 'axios';\nimport '../axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport {\n    SET_LOADING,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_ERROR,\n    LOGOUT_USER,\n    SET_USER,\n    FETCH_JOBS_SUCCESS,\n    FETCH_JOBS_ERROR,\n    CREATE_JOB_SUCCESS,\n    CREATE_JOB_ERROR,\n    DELETE_JOB_ERROR,\n    FETCH_SINGLE_JOB_SUCCESS,\n    FETCH_SINGLE_JOB_ERROR,\n    EDIT_JOB_SUCCESS,\n    EDIT_JOB_ERROR,\n} from './actions';\nimport reducer from './reducer';\n\nconst initialState = {\n    user: null,\n    isLoading: false,\n    jobs: [],\n    showAlert: false,\n    editItem: null,\n    singleJobError: false,\n    editComplete: false,\n};\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const setLoading = () => {\n        dispatch({ type: SET_LOADING });\n    };\n\n    // register\n    const register = async (userInput) => {\n        setLoading();\n        try {\n            const { data } = await axios.post(`/auth/register`, {\n                ...userInput,\n            });\n\n            dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user.name });\n            localStorage.setItem(\n                'user',\n                JSON.stringify({ name: data.user.name, token: data.token })\n            );\n        } catch (error) {\n            dispatch({ type: REGISTER_USER_ERROR });\n        }\n    };\n\n    // login\n    const login = async (userInput) => {\n        setLoading();\n        try {\n            const { data } = await axios.post(`/auth/login`, {\n                ...userInput,\n            });\n            dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user.name });\n            localStorage.setItem(\n                'user',\n                JSON.stringify({ name: data.user.name, token: data.token })\n            );\n        } catch (error) {\n            dispatch({ type: REGISTER_USER_ERROR });\n        }\n    };\n\n    // logout\n    const logout = () => {\n        localStorage.removeItem('user');\n        dispatch({ type: LOGOUT_USER });\n    };\n\n    // fetch jobs\n    const fetchJobs = async () => {\n        setLoading();\n        try {\n            const { data } = await axios.get(`/jobs`);\n            dispatch({ type: FETCH_JOBS_SUCCESS, payload: data.jobs });\n        } catch (error) {\n            dispatch({ type: FETCH_JOBS_ERROR });\n            logout();\n        }\n    };\n\n    // create job\n    const createJob = async (userInput) => {\n        setLoading();\n        try {\n            const { data } = await axios.post(`/jobs`, {\n                ...userInput,\n            });\n\n            dispatch({ type: CREATE_JOB_SUCCESS, payload: data.job });\n        } catch (error) {\n            dispatch({ type: CREATE_JOB_ERROR });\n        }\n    };\n    const deleteJob = async (jobId) => {\n        setLoading();\n        try {\n            await axios.delete(`/jobs/${jobId}`);\n\n            fetchJobs();\n        } catch (error) {\n            dispatch({ type: DELETE_JOB_ERROR });\n        }\n    };\n\n    const fetchSingleJob = async (jobId) => {\n        setLoading();\n        try {\n            const { data } = await axios.get(`/jobs/${jobId}`);\n            dispatch({ type: FETCH_SINGLE_JOB_SUCCESS, payload: data.job });\n        } catch (error) {\n            dispatch({ type: FETCH_SINGLE_JOB_ERROR });\n        }\n    };\n    const editJob = async (jobId, userInput) => {\n        setLoading();\n        try {\n            const { data } = await axios.patch(`/jobs/${jobId}`, {\n                ...userInput,\n            });\n            dispatch({ type: EDIT_JOB_SUCCESS, payload: data.job });\n        } catch (error) {\n            dispatch({ type: EDIT_JOB_ERROR });\n        }\n    };\n\n    useEffect(() => {\n        const user = localStorage.getItem('user');\n        if (user) {\n            const newUser = JSON.parse(user);\n            dispatch({ type: SET_USER, payload: newUser.name });\n        }\n    }, []);\n    return (\n        <AppContext.Provider\n            value={{\n                ...state,\n                setLoading,\n                register,\n                login,\n                logout,\n                fetchJobs,\n                createJob,\n                deleteJob,\n                fetchSingleJob,\n                editJob,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n// make sure use\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n};\n\nexport { AppProvider };\n","import React from 'react';\n\nconst FormRow = ({\n  type,\n  name,\n  value,\n  handleChange,\n  horizontal,\n  placeholder,\n}) => {\n  return (\n    <div className='form-row'>\n      {!horizontal && (\n        <label htmlFor={name} className='form-label'>\n          {name}\n        </label>\n      )}\n      <input\n        type={type}\n        value={value}\n        name={name}\n        onChange={handleChange}\n        className='form-input'\n        placeholder={placeholder}\n      />\n    </div>\n  );\n};\n\nexport default FormRow;\n","export default __webpack_public_path__ + \"static/media/logo.747803ac.svg\";","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../context/appContext';\nimport { Redirect } from 'react-router-dom';\nimport FormRow from '../components/FormRow';\nimport logo from '../assets/logo.svg';\n\nfunction Register() {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        isMember: true,\n    });\n\n    const { user, register, login, isLoading, showAlert } = useGlobalContext();\n    const toggleMember = () => {\n        setValues({ ...values, isMember: !values.isMember });\n    };\n    const handleChange = (e) => {\n        setValues({ ...values, [e.target.name]: e.target.value });\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const { name, email, password, isMember } = values;\n\n        if (isMember) {\n            login({ email, password });\n        } else {\n            register({ name, email, password });\n        }\n    };\n\n    return (\n        <>\n            {user && <Redirect to=\"/dashboard\" />}\n            <Wrapper className=\"page full-page\">\n                <div className=\"container\">\n                    {showAlert && (\n                        <div className=\"alert alert-danger\">\n                            there was an error, please try again\n                        </div>\n                    )}\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <Link to=\"/\">\n                            <img src={logo} alt=\"jobio\" className=\"logo\" />\n                        </Link>\n                        <h4>{values.isMember ? 'Login' : 'Register'}</h4>\n                        {/* name field */}\n                        {!values.isMember && (\n                            <FormRow\n                                type=\"name\"\n                                name=\"name\"\n                                value={values.name}\n                                handleChange={handleChange}\n                            />\n                        )}\n\n                        {/* single form row */}\n                        <FormRow\n                            type=\"email\"\n                            name=\"email\"\n                            value={values.email}\n                            handleChange={handleChange}\n                        />\n                        {/* end of single form row */}\n                        {/* single form row */}\n                        <FormRow\n                            type=\"password\"\n                            name=\"password\"\n                            value={values.password}\n                            handleChange={handleChange}\n                        />\n                        {/* end of single form row */}\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-block\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? 'Fetching User...' : 'Submit'}\n                        </button>\n                        <p>\n                            {values.isMember\n                                ? 'Not a member yet?'\n                                : 'Already a member?'}\n\n                            <button\n                                type=\"button\"\n                                onClick={toggleMember}\n                                className=\"member-btn\"\n                            >\n                                {values.isMember ? 'Register' : 'Login'}\n                            </button>\n                        </p>\n                    </form>\n                </div>\n            </Wrapper>\n        </>\n    );\n}\n\nconst Wrapper = styled.section`\n    display: grid;\n    align-items: center;\n    .logo {\n        display: block;\n        margin: 0 auto;\n        margin-bottom: 1.38rem;\n    }\n    .form {\n        max-width: 400;\n        border-top: 5px solid var(--primary-500);\n    }\n\n    h4 {\n        text-align: center;\n    }\n    p {\n        margin: 0;\n        margin-top: 1rem;\n        text-align: center;\n    }\n    .btn {\n        margin-top: 1rem;\n    }\n    .member-btn {\n        background: transparent;\n        border: transparent;\n        color: var(--primary-500);\n        cursor: pointer;\n    }\n`;\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/main.b97e6ece.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport main from '../assets/main.svg';\nimport { useGlobalContext } from '../context/appContext';\nimport { Redirect } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nfunction Home() {\n    const { user } = useGlobalContext();\n\n    return (\n        <>\n            {user && <Redirect to=\"/dashboard\" />}\n            <Wrapper>\n                <nav>\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"jobs app\" />\n                    </Link>\n                </nav>\n                <div className=\"container page\">\n                    <div className=\"info\">\n                        <h1>job app frontend</h1>\n                        <p>\n                            Store your job offers in one place. You can take\n                            control of our recruitment processes. The\n                            user-friendly layout and handy features are our\n                            strengths. Easy to start, comfortable to use. Log in\n                            and start trying out our app!\n                        </p>\n\n                        <Link to=\"/register\" className=\"btn hero-btn\">\n                            Login / Register\n                        </Link>\n                    </div>\n                    <img src={main} alt=\"job hunt\" className=\"img main-img\" />\n                </div>\n            </Wrapper>\n        </>\n    );\n}\n\nconst Wrapper = styled.div`\n    .container {\n        min-height: calc(100vh - 6rem);\n        display: grid;\n        align-items: center;\n        margin-top: -3rem;\n    }\n    nav {\n        width: var(--fluid-width);\n        max-width: var(--max-width);\n        margin: 0 auto;\n        height: 6rem;\n        display: flex;\n        align-items: center;\n    }\n    h1 {\n        font-weight: 700;\n    }\n    .main-img {\n        display: none;\n    }\n    @media (min-width: 992px) {\n        .container {\n            grid-template-columns: 1fr 1fr;\n            column-gap: 6rem;\n        }\n        .main-img {\n            display: block;\n        }\n    }\n`;\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../assets/logo.svg';\nimport { FaUserCircle, FaCaretDown } from 'react-icons/fa';\nimport { useGlobalContext } from '../context/appContext';\n\nconst Navbar = () => {\n    const { user, logout } = useGlobalContext();\n    const [showLogout, setShowLogout] = useState(false);\n    return (\n        <Wrapper>\n            <div className=\"nav-center\">\n                <Link to=\"/\">\n                    <img src={logo} alt=\"jobs app\" />\n                </Link>\n                {user && (\n                    <div className=\"btn-container\">\n                        <button\n                            className=\"btn\"\n                            onClick={() => setShowLogout(!showLogout)}\n                        >\n                            <FaUserCircle />\n                            {user}\n                            <FaCaretDown />\n                        </button>\n                        <div\n                            className={\n                                showLogout\n                                    ? 'dropdown show-dropdown'\n                                    : 'dropdown'\n                            }\n                        >\n                            <button\n                                onClick={() => logout()}\n                                className=\"dropdown-btn\"\n                            >\n                                logout\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </Wrapper>\n    );\n};\n\nconst Wrapper = styled.nav`\n    height: 6rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .nav-center {\n        width: var(--fluid-width);\n        max-width: var(--max-width);\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    .btn-container {\n        position: relative;\n    }\n    .btn {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0 0.5rem;\n        position: relative;\n    }\n\n    .dropdown {\n        position: absolute;\n        top: 40px;\n        left: 0;\n        width: 100%;\n        background: var(--white);\n        padding: 0.5rem;\n        text-align: center;\n        visibility: hidden;\n        transition: var(--transition);\n        border-radius: var(--borderRadius);\n    }\n    .show-dropdown {\n        visibility: visible;\n    }\n    .dropdown-btn {\n        background: transparent;\n        border-color: transparent;\n        color: var(--primary-500);\n        letter-spacing: var(--letterSpacing);\n        text-transform: capitalize;\n        cursor: pointer;\n    }\n`;\n\nexport default Navbar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst JobColumns = () => {\n  return (\n    <Wrapper>\n      <span>position</span>\n      <span>company</span>\n      <span>date</span>\n      <span>status</span>\n      <span className='action'>action</span>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section`\n  display: none;\n  @media (min-width: 992px) {\n    display: block;\n    background: var(--grey-200);\n    color: var(--grey-500);\n    border-top-left-radius: var(--borderRadius);\n    border-top-right-radius: var(--borderRadius);\n    display: grid;\n    grid-template-columns: 1fr 1fr 150px 100px 100px;\n    align-items: center;\n    padding: 1rem 1.5rem;\n    column-gap: 1rem;\n    text-transform: capitalize;\n    letter-spacing: var(--letterSpacing);\n    font-size: var(--small-text);\n    font-weight: 600;\n    .action {\n      margin-left: 1rem;\n    }\n  }\n`;\n\nexport default JobColumns;\n","import { useGlobalContext } from '../context/appContext';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport moment from 'moment';\nimport JobColumns from './JobColumns';\n\nconst Jobs = () => {\n  const { jobs, isLoading, deleteJob } = useGlobalContext();\n\n  if (isLoading) {\n    return <div className='loading'></div>;\n  }\n\n  if (jobs.length < 1) {\n    return (\n      <EmptyContainer>\n        <h5>\n          Currently, you have no <span>JOBS </span>\n          to display\n        </h5>\n      </EmptyContainer>\n    );\n  }\n\n  return (\n    <>\n      <JobColumns />\n      <Container>\n        {jobs.map((item) => {\n          const { _id: id, company, position, status, createdAt } = item;\n          let date = moment(createdAt);\n          date = date.format('MMMM Do, YYYY');\n          return (\n            <article key={id} className='job'>\n              <span className='icon'>{company.charAt(0)}</span>\n              <span className='position'>{position.toLowerCase()}</span>\n              <span className='company'>{company}</span>\n              <span className='date'>{date}</span>\n              <StatusContainer className='status' status={status}>\n                {status}\n              </StatusContainer>\n              <div className='action-div'>\n                <Link to={`/edit/${id}`} className='edit-btn' type='button'>\n                  <FaEdit />\n                </Link>\n                <button\n                  className=' delete-btn'\n                  type='button'\n                  onClick={() => deleteJob(id)}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </Container>\n    </>\n  );\n};\nconst EmptyContainer = styled.section`\n  text-align: center;\n  h5 {\n    text-transform: none;\n  }\n  span {\n    color: var(--primary-500);\n  }\n`;\nconst Container = styled.section`\n  .job {\n    background: var(--white);\n    border-radius: var(--borderRadius);\n    margin-bottom: 2rem;\n    display: grid;\n    padding: 2rem 0;\n    justify-content: center;\n    text-align: center;\n  }\n  .icon {\n    background: var(--primary-500);\n    display: block;\n    border-radius: var(--borderRadius);\n    color: var(--white);\n    font-size: 2rem;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    margin-bottom: 1rem;\n  }\n  span {\n    text-transform: capitalize;\n    letter-spacing: var(--letterSpacing);\n  }\n  .position {\n    font-weight: 600;\n  }\n  .date {\n    color: var(--grey-500);\n  }\n  .status {\n    border-radius: var(--borderRadius);\n    text-transform: capitalize;\n    letter-spacing: var(--letterSpacing);\n    text-align: center;\n    margin: 0.75rem auto;\n    width: 100px;\n  }\n  .edit-btn {\n    color: var(--green-dark);\n    border-color: transparent;\n    background: transparent !important;\n    outline: transparent;\n    border-radius: var(--borderRadius);\n    cursor: pointer;\n    display: inline-block;\n    appearance: none;\n  }\n  .delete-btn {\n    color: var(--red-dark);\n    border-color: transparent;\n    border-radius: var(--borderRadius);\n    cursor: pointer;\n    background: transparent;\n  }\n  .edit-btn,\n  .delete-btn {\n    font-size: 1rem;\n    line-height: 1.15;\n    margin-bottom: -3px;\n  }\n\n  .action-div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0 0.5rem;\n  }\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 1rem;\n  }\n  @media (min-width: 992px) {\n    grid-template-columns: 1fr;\n    .icon {\n      display: none;\n    }\n    background: var(--white);\n    border-bottom-left-radius: var(--borderRadius);\n    border-bottom-right-radius: var(--borderRadius);\n\n    .job {\n      border-radius: 0;\n      justify-content: left;\n      text-align: left;\n      border-bottom: 1px solid var(--grey-200);\n      grid-template-columns: 1fr 1fr 150px 100px 100px;\n      align-items: center;\n      padding: 1rem 1.5rem;\n      column-gap: 1rem;\n      margin-bottom: 0;\n    }\n    .job:last-child {\n      border-bottom: none;\n    }\n    span {\n      font-size: var(--small-text);\n    }\n    .company,\n    .position {\n      font-weight: 400;\n      text-transform: capitalize;\n    }\n    .date {\n      font-weight: 400;\n      color: var(--grey-500);\n    }\n\n    .status {\n      font-size: var(--smallText);\n    }\n\n    .action-div {\n      margin-left: 1rem;\n      justify-content: left;\n    }\n  }\n`;\nconst setStatusColor = (status) => {\n  if (status === 'interview') return '#0f5132';\n  if (status === 'declined') return '#842029';\n  return '#927238';\n};\nconst setStatusBackground = (status) => {\n  if (status === 'interview') return '#d1e7dd';\n  if (status === 'declined') return '#f8d7da';\n  return '#f7f3d7';\n};\n\nconst StatusContainer = styled.span`\n  border-radius: var(--borderRadius);\n  text-transform: capitalize;\n  letter-spacing: var(--letterSpacing);\n  text-align: center;\n  color: ${(props) => setStatusColor(props.status)};\n  background: ${(props) => setStatusBackground(props.status)};\n`;\nexport default Jobs;\n","import styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useGlobalContext } from '../context/appContext';\nimport FormRow from '../components/FormRow';\nimport Navbar from '../components/Navbar';\nimport Jobs from '../components/Jobs';\n\nfunction Dashboard() {\n  const [values, setValues] = useState({ company: '', position: '' });\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const { isLoading, showAlert, fetchJobs, createJob } = useGlobalContext();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { company, position } = values;\n    if (company && position) {\n      createJob(values);\n      setValues({ company: '', position: '' });\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return (\n    <>\n      <Navbar />\n\n      <Wrapper className='page'>\n        {showAlert && (\n          <div className='alert alert-danger'>\n            there was an error, please try again\n          </div>\n        )}\n        <form className='job-form' onSubmit={handleSubmit}>\n          {/* position */}\n          <FormRow\n            type='name'\n            name='position'\n            value={values.position}\n            handleChange={handleChange}\n            horizontal\n            placeholder='Position'\n          />\n          {/* company */}\n          <FormRow\n            type='name'\n            name='company'\n            value={values.company}\n            handleChange={handleChange}\n            horizontal\n            placeholder='Company'\n          />\n          <button type='submit' className='btn' disabled={isLoading}>\n            {isLoading ? 'Adding New Job...' : 'Add Job'}\n          </button>\n        </form>\n\n        <Jobs />\n      </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = styled.section`\n  padding: 3rem 0;\n\n  .job-form {\n    background: var(--white);\n    display: grid;\n    row-gap: 1rem;\n    column-gap: 0.5rem;\n    align-items: center;\n    margin-bottom: 3rem;\n    border-radius: var(--borderRadius);\n    padding: 1.5rem;\n    .form-input {\n      padding: 0.75rem;\n    }\n\n    .form-input:focus {\n      outline: 1px solid var(--primary-500);\n    }\n    .form-row {\n      margin-bottom: 0;\n    }\n    .btn {\n      padding: 0.75rem;\n    }\n    @media (min-width: 776px) {\n      grid-template-columns: 1fr 1fr auto;\n      .btn {\n        height: 100%;\n        padding: 0 2rem;\n      }\n      column-gap: 2rem;\n    }\n  }\n  .alert {\n    max-width: var(--max-width);\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default Dashboard;\n","import { useState, useEffect } from 'react';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../context/appContext';\nimport FormRow from '../components/FormRow';\nimport Navbar from '../components/Navbar';\nfunction Update() {\n    const { id } = useParams();\n    const {\n        isLoading,\n        editItem,\n        fetchSingleJob,\n        singleJobError: error,\n        user,\n        editJob,\n        editComplete,\n    } = useGlobalContext();\n\n    const [values, setValues] = useState({\n        company: '',\n        position: '',\n        status: '',\n    });\n\n    useEffect(() => {\n        fetchSingleJob(id);\n    }, [id]);\n\n    useEffect(() => {\n        if (editItem) {\n            const { company, position, status } = editItem;\n            setValues({ company, position, status });\n        }\n    }, [editItem]);\n\n    const handleChange = (e) => {\n        setValues({ ...values, [e.target.name]: e.target.value });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const { company, position, status } = values;\n        if (company && position) {\n            editJob(id, { company, position, status });\n        }\n    };\n    if (isLoading && !editItem) {\n        return <div className=\"loading\"></div>;\n    }\n\n    if (!editItem || error) {\n        return (\n            <>\n                {!user && <Redirect to=\"/\" />}\n                <ErrorContainer className=\"page\">\n                    <h5>There was an error, please double check your job ID</h5>\n\n                    <Link to=\"/dashboard\" className=\"btn\">\n                        dasboard\n                    </Link>\n                </ErrorContainer>\n            </>\n        );\n    }\n    return (\n        <>\n            {!user && <Redirect to=\"/\" />}\n            <Navbar />\n            <Container className=\"page\">\n                <header>\n                    <Link to=\"/dashboard\" className=\"btn btn-block back-home\">\n                        back home\n                    </Link>\n                </header>\n                <form className=\"form\" onSubmit={handleSubmit}>\n                    <p>{editComplete && 'Success! Edit Complete'}</p>\n                    <h4>Update Job</h4>\n                    {/* company */}\n                    <div className=\"form-container\">\n                        <FormRow\n                            type=\"name\"\n                            name=\"position\"\n                            value={values.position}\n                            handleChange={handleChange}\n                        />\n                        <FormRow\n                            type=\"name\"\n                            name=\"company\"\n                            value={values.company}\n                            handleChange={handleChange}\n                        />\n                        <div className=\"form-row\">\n                            <label htmlFor=\"status\" className=\"form-label\">\n                                Status\n                            </label>\n                            <select\n                                name=\"status\"\n                                value={values.status}\n                                onChange={handleChange}\n                                className=\"status\"\n                            >\n                                <option value=\"pending\">pending</option>\n                                <option value=\"interview\">interview</option>\n                                <option value=\"declined\">declined</option>\n                            </select>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-block submit-btn\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? 'Editing...' : 'Edit'}\n                        </button>\n                    </div>\n                </form>\n            </Container>\n        </>\n    );\n}\nconst ErrorContainer = styled.section`\n    text-align: center;\n    padding-top: 6rem; ;\n`;\n\nconst Container = styled.section`\n    header {\n        margin-top: 4rem;\n    }\n    .form {\n        max-width: var(--max-width);\n        margin-top: 2rem;\n    }\n    .form h4 {\n        text-align: center;\n    }\n    .form > p {\n        text-align: center;\n        color: var(--green-dark);\n        letter-spacing: var(--letterSpacing);\n        margin-top: 0;\n    }\n    .status {\n        background: var(--grey-100);\n        border-radius: var(--borderRadius);\n        border-color: transparent;\n        padding: 0.25rem;\n    }\n    .back-home {\n        text-align: center;\n        display: block;\n        width: 100%;\n        font-size: 1rem;\n        line-height: 1.15;\n        background: var(--black);\n    }\n    .back-home:hover {\n        background: var(--grey-500);\n    }\n    @media (min-width: 768px) {\n        .back-home {\n            width: 200px;\n        }\n        .form h4 {\n            text-align: left;\n        }\n        .form-container {\n            display: grid;\n            grid-template-columns: 1fr 1fr 100px auto;\n            column-gap: 0.5rem;\n            align-items: center;\n        }\n\n        .form > p {\n            text-align: left;\n        }\n        .form-row {\n            margin-bottom: 0;\n        }\n        .submit-btn {\n            align-self: end;\n        }\n    }\n`;\nexport default Update;\n","export default __webpack_public_path__ + \"static/media/not-found.33715abd.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport img from '../assets/not-found.svg';\nconst Error = () => {\n  return (\n    <Wrapper className='page full-page'>\n      <div>\n        <img src={img} alt='not found' />\n        <h3>Ohh! page not found</h3>\n        <p>We can't seem to find the page you're looking for</p>\n        <Link to='/'>Back to home</Link>\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.main`\n  text-align: center;\n  img {\n    max-width: 600px;\n    display: block;\n    margin-bottom: 2rem;\n  }\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  h3 {\n    margin-bottom: 0.5rem;\n  }\n  p {\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n    color: var(--grey-500);\n  }\n  a {\n    color: var(--primary-500);\n    text-decoration: underline;\n  }\n`;\n\nexport default Error;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalContext } from '../context/appContext'\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const { user } = useGlobalContext()\n\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return user ? children : <Redirect to='/'></Redirect>\n      }}\n    ></Route>\n  )\n}\nexport default PrivateRoute\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home, Dashboard, Register, Edit, Error, PrivateRoute } from './pages';\nimport Navbar from './components/Navbar';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact>\n          <Home />\n        </Route>\n        <PrivateRoute path='/dashboard' exact>\n          <Dashboard />\n        </PrivateRoute>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route path='/edit/:id'>\n          <Edit />\n        </Route>\n\n        <Route path='*'>\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'normalize.css'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context/appContext'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}